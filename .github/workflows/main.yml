name: CI
on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    name: test
    env:
      AWS_S3_BUCKET: testbucket
      AWS_S3_ACCESS_KEY: minioadmin
      AWS_S3_SECRET_KEY: minioadmin
      AWS_S3_ENDPOINT: http://127.0.0.1:9000

    steps:
      - uses: actions/checkout@v2
      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment.yml
      - name: build powerloader
        if: runner.os != 'Windows'
        shell: bash -l {0}
        run: |
          mkdir build; cd build
          export USE_ZCHUNK=ON
          if [ "$RUNNER_OS" == "Windows" ]; then
            USE_ZCHUNK=OFF
          fi
          cmake .. \
            -GNinja \
            -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
            -DWITH_ZCHUNK=$USE_ZCHUNK \
            -DENABLE_TESTS=ON
          ninja
      - name: run powerloader tests
        if: runner.os != 'Windows'
        shell: bash -l {0}
        run: |
          cd build
          ninja test
      - name: fixup micromamba
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          micromamba shell init -p C:\Users\runneradmin\micromamba
      - name: build powerloader
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate powerloader
          echo %CONDA_PREFIX%
          echo %PATH%
          mkdir build
          cd build
          cmake .. -DCMAKE_PREFIX_PATH=%CONDA_PREFIX%\Library ^
                   -DENABLE_TESTS=ON ^
                   -DWITH_ZCHUNK=OFF ^
                   -G "Ninja"
          ninja
          ninja test

      - name: Setup minio
        run: |
          sudo docker start minio || docker run -d -p 9000:9000 --name minio \
                     -e "MINIO_ACCESS_KEY=minioadmin" \
                     -e "MINIO_SECRET_KEY=minioadmin" \
                     -v /tmp/data:/data \
                     -v /tmp/config:/root/.minio \
                     minio/minio server /data

          export AWS_ACCESS_KEY_ID=minioadmin
          export AWS_SECRET_ACCESS_KEY=minioadmin
          export AWS_EC2_METADATA_DISABLED=true

          # Populate minIO
          # https://docs.min.io/docs/aws-cli-with-minio.html
          aws --endpoint-url $AWS_S3_ENDPOINT s3 mb s3://testbucket

      - name: powerloader python based tests
        shell: bash -l -eo pipefail {0}
        if: runner.os != 'Windows'
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          export GHA_PAT=$GITHUB_TOKEN
          # Download the packages from conda forge
          server_path="test/conda_mock/static/packages"
          powerloader_path="build/powerloader"
          wget https://beta.mamba.pm/get/conda-forge/osx-arm64/xtensor-0.24.0-hc021e02_0.tar.bz2 \
              -O ./test/conda_mock/static/packages/xtensor-0.24.0-hc021e02_0.tar.bz2
          $powerloader_path download -f test/remote_mirrors.yml -d $server_path
          
          aws --endpoint-url $AWS_S3_ENDPOINT s3 cp $server_path/boa-0.8.1.tar.gz s3://testbucket/
          # aws --endpoint-url $AWS_S3_ENDPOINT s3 ls s3://testbucket

          # Run tests
          pytest ./test/*.py
